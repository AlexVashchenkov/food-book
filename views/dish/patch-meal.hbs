<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Редактирование блюда</title>
  {{> styles}}
</head>
<body>
{{> header}}

<main>
  <div class="edit-meal-container">
    <h1 class="form-title">Редактирование блюда:</h1>
    <form id="mealForm" enctype="multipart/form-data" action="/dishes/{{dish.id}}" method="POST">
      <input type="hidden" name="_method" value="PATCH">
      <input type="hidden" name="dishId" value="{{dish.id}}">

      <div class="form-group">
        <label for="category">Категория</label>
        <input type="text" id="category" name="category" value="{{dish.category.name}}" required>
      </div>

      <div class="form-group">
        <label for="title">Название блюда:</label>
        <input type="text" id="title" name="name" value="{{dish.name}}" required>
      </div>

      <div class="form-group">
        <label>Ингредиенты:</label>
        <div class="ingredients-container" id="ingredientsContainer">
          {{#each dish.ingredients}}
            <div class="ingredient-group">
              <input type="text" class="ingredient-input" name="ingredientName" value="{{this.name}}"
                     placeholder="Название" required>
              <input type="number" class="ingredient-input" name="ingredientAmount" value="{{this.amount}}" step="0.01"
                     min="0" placeholder="Количество" required>
              <button type="button" class="btn-ingredient remove-ingredient">-</button>
              <button type="button" class="btn-ingredient add-ingredient">+</button>
            </div>
          {{else}}
            <div class="ingredient-group">
              <input type="text" class="ingredient-input" name="ingredientName" placeholder="Название" required>
              <input type="number" class="ingredient-input" name="ingredientAmount" step="0.01" min="0"
                     placeholder="Количество" required>
              <button type="button" class="btn-ingredient remove-ingredient" disabled>-</button>
              <button type="button" class="btn-ingredient add-ingredient">+</button>
            </div>
          {{/each}}
        </div>
      </div>

      <div class="form-group">
        <label for="steps">Шаги приготовления:</label>
        <textarea id="steps" name="steps" rows="3">{{#if dish.recipe}}{{dish.recipe.steps}}{{/if}}</textarea>
      </div>

      <div class="form-group" id="form-group-photo">
        <label for="photo">Фотография блюда:</label>
        <input type="file" id="photo" name="photo" accept="image/*">
        {{#if dish.photo}}
          <img src="{{dish.photo}}" alt="Текущее фото" class="current-photo">
          <input type="hidden" name="currentPhoto" value="{{dish.photo}}">
        {{/if}}
        <div id="imagePreview"></div>
      </div>

      <button type="submit">Сохранить изменения</button>
    </form>
  </div>
</main>

{{> footer}}

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const container = document.getElementById('ingredientsContainer');
    const form = document.getElementById('mealForm');
    const imagePreview = document.getElementById('imagePreview');
    const photoInput = document.getElementById('photo');

    photoInput.addEventListener('change', function(e) {
      const file = e.target.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = function(e) {
          imagePreview.innerHTML = `<img src="${e.target.result}" style="max-width: 200px; margin-top: 10px;">`;
        }
        reader.readAsDataURL(file);
      }
    });

    container.addEventListener('click', function(e) {
      if (e.target.classList.contains('add-ingredient')) {
        addIngredientField();
        updateRemoveButtonsState();
      } else if (e.target.classList.contains('remove-ingredient')) {
        e.target.closest('.ingredient-group').remove();
        updateRemoveButtonsState();
      }
    });

    function addIngredientField() {
      const group = document.createElement('div');
      group.className = 'ingredient-group';
      group.innerHTML = `
        <input type="text" class="ingredient-input" name="ingredientName" placeholder="Название" required>
        <input type="number" class="ingredient-input" name="ingredientAmount" step="0.01" min="0" placeholder="Количество" required>
        <button type="button" class="btn-ingredient remove-ingredient">-</button>
        <button type="button" class="btn-ingredient add-ingredient">+</button>
      `;
      container.appendChild(group);
    }

    function updateRemoveButtonsState() {
      const removeButtons = container.querySelectorAll('.remove-ingredient');
      removeButtons.forEach(btn => {
        btn.disabled = removeButtons.length === 1;
      });
    }

    form.addEventListener('submit', async function(e) {
      e.preventDefault();

      const formData = new FormData(form);

      const names = form.querySelectorAll('input[name="ingredientName"]');
      const amounts = form.querySelectorAll('input[name="ingredientAmount"]');

      const ingredients = [];
      for (let i = 0; i < names.length; i++) {
        const name = names[i].value.trim();
        const amount = amounts[i].value.trim();
        if (name && amount) {
          ingredients.push({ name, amount: Number(amount) });
        }
      }

      const categoryInput = form.querySelector('#category');
      const nameInput = form.querySelector('#title');
      const stepsInput = form.querySelector('#steps');

      formData.set('category', categoryInput.value.trim());
      formData.set('name', nameInput.value.trim());
      formData.set('steps', stepsInput.value.trim());
      formData.set('ingredients', JSON.stringify(ingredients));

      try {
        const response = await fetch(form.action, {
          method: 'PATCH',
          body: formData,
        });

        if (response.ok) {
          const result = await response.json();
          window.location.href = result.redirect;
        } else {
          console.error('Ошибка при сохранении изменений');
          alert('Ошибка при сохранении изменений');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Произошла ошибка при отправке данных');
      }
    });
  });
</script>

</body>
</html>