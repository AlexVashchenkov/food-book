<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{{meal.name}} | Блюдо</title>
  {{> styles}}
  <style>
    .meal-main {
      display: flex;
      flex-direction: row;
      padding: 20px;
      gap: 20px;
    }

    .meal-photo-container {
      flex: 1;
      max-width: 50%;
    }

    .meal-photo {
      width: 100%;
      height: auto;
      border-radius: 8px;
      object-fit: cover;
    }

    .meal-detail {
      flex: 1;
      max-width: 50%;
      display: flex;
      flex-direction: column;
      gap: 10px;
    }

    .meal-actions {
      margin-top: 20px;
      display: flex;
      gap: 10px;
    }
  </style>
</head>
<body>
{{> header}}

<main class="meal-main">
  <div class="meal-photo-container">
    <img
      src="{{#if meal.photo}}{{meal.photo}}{{else}}/public/img/no_photo.jpg{{/if}}"
      alt="Фото блюда"
      class="meal-photo"
    >
  </div>

  <div class="meal-detail">
    <h2>{{meal.name}}</h2>
    <p><strong>Категория:</strong> {{#if meal.category}}{{meal.category.name}}{{else}}Не указана{{/if}}</p>

    {{#if meal.ingredients.length}}
      <h3>Ингредиенты:</h3>
      <ol class="ingredients-list">
        {{#each meal.ingredients}}
          <li>{{this.ingredient.name}}: {{this.amount}} {{this.ingredient.unit}}</li>
        {{/each}}
      </ol>
    {{else}}
      <p><em>Нет информации об ингредиентах</em></p>
    {{/if}}

    {{#if meal.recipe}}
      <h3>Рецепт:</h3>
      <p>{{meal.recipe.steps}}</p>
    {{else}}
      <p><em>Рецепт не указан</em></p>
    {{/if}}

    <div class="meal-actions">
      <a href="/dishes/{{meal.id}}/edit" class="btn-edit">Редактировать блюдо</a>
      <button id="deleteDishBtn" class="btn-delete">Удалить блюдо</button>
    </div>
  </div>
</main>

{{> footer}}

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const deleteBtn = document.getElementById('deleteDishBtn');

    deleteBtn.addEventListener('click', async () => {
      if (!confirm('Вы уверены, что хотите удалить это блюдо? Это действие нельзя отменить.')) {
        return;
      }

      try {
        const response = await fetch(`/dishes/{{meal.id}}`, {
          method: 'DELETE',
          headers: { 'Content-Type': 'application/json' },
        });

        if (response.ok) {
          window.location.href = '/dishes';
        } else {
          const error = await response.json();
          alert(error.message || 'Ошибка при удалении блюда');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Произошла ошибка при удалении блюда');
      }
    });
  });
</script>
</body>
</html>
