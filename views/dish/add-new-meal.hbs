<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Добавление блюда</title>
  {{> styles}}
</head>
<body>
{{> header}}

<main>
  <div class="edit-meal-container">
    <h1 class="form-title">Добавление блюда:</h1>
    <form id="mealForm" enctype="multipart/form-data" action="/dishes/add" method="POST">
      <div class="form-group">
        <label for="category">Категория</label>
        <input type="text" id="category" name="category" required>
      </div>

      <div class="form-group">
        <label for="userId">Id пользователя</label>
        <input type="number" id="userId" name="userId" required>
      </div>

      <div class="form-group">
        <label for="name">Название блюда:</label>
        <input type="text" id="name" name="name" required>
      </div>

      <div class="form-group">
        <label>Ингредиенты:</label>
        <div id="ingredientsContainer" class="ingredients-container">
          <div class="ingredient-group">
            <input type="text" name="ingredientName" class="ingredient-input" placeholder="Название" required>
            <input type="number" name="ingredientAmount" class="ingredient-input" step="0.01" min="0"
                   placeholder="Количество" required>
            <button type="button" class="btn-ingredient remove-ingredient" disabled>-</button>
            <button type="button" class="btn-ingredient add-ingredient">+</button>
          </div>
        </div>
      </div>

      <div class="form-group">
        <label for="steps">Шаги приготовления:</label>
        <textarea id="steps" name="steps" rows="3"></textarea>
      </div>

      <div class="form-group">
        <label for="photo">Фотография блюда:</label>
        <input type="file" id="photo" name="photo" accept="image/*">
        <div id="imagePreview"></div>
      </div>

      <button type="submit">Добавить блюдо</button>
    </form>
  </div>
</main>

{{> footer}}

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const container = document.getElementById('ingredientsContainer');
    const form = document.getElementById('mealForm');

    container.addEventListener('click', (e) => {
      if (e.target.classList.contains('add-ingredient')) {
        addIngredientField();
        updateRemoveButtons();
      } else if (e.target.classList.contains('remove-ingredient')) {
        e.target.closest('.ingredient-group').remove();
        updateRemoveButtons();
      }
    });

    function addIngredientField() {
      const group = document.createElement('div');
      group.className = 'ingredient-group';
      group.innerHTML = `
        <input type="text" name="ingredientName" class="ingredient-input" placeholder="Название" required>
        <input type="number" name="ingredientAmount" class="ingredient-amount" step="0.01" min="0" placeholder="Количество" required>
        <button type="button" class="btn-ingredient remove-ingredient">-</button>
        <button type="button" class="btn-ingredient add-ingredient">+</button>
      `;
      container.appendChild(group);
    }

    function updateRemoveButtons() {
      const allGroups = container.querySelectorAll('.ingredient-group');
      allGroups.forEach((group, index) => {
        const removeBtn = group.querySelector('.remove-ingredient');
        removeBtn.disabled = allGroups.length === 1;
      });
    }

    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      const ingredients = [];
      const names = form.querySelectorAll('.ingredient-input');
      const amounts = form.querySelectorAll('.ingredient-amount');

      names.forEach((input, index) => {
        const name = input.value.trim();
        const amount = amounts[index].value.trim();
        if (name && amount) {
          ingredients.push({ name, amount: Number(amount) });
        }
      });

      const dto = {
        category: form.category.value.trim(),
        userId: Number(form.userId.value),
        name: form.name.value.trim(),
        steps: form.steps.value.trim(),
        ingredients,
        photo: 'default.jpg', // пока просто строка-заглушка
      };

      try {
        const response = await fetch(form.action, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(dto),
        });

        if (response.ok) {
          const result = await response.json();
          window.location.href = result.redirect || '/dishes';
        } else {
          alert('Ошибка при создании блюда');
        }
      } catch (error) {
        console.error('Ошибка:', error);
        alert('Произошла ошибка при отправке данных');
      }
    });
  });
</script>
</body>
</html>
